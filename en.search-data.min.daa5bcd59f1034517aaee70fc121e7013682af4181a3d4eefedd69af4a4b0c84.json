[{"id":0,"href":"/notes/physics7a/1/","title":"Chapter 1: Intro, Measurement, Estimating","section":"Physics 7A","content":"Pretty rudimentary stuff\u0026hellip;\n Come back and add the basic dimensional analysis and etc that seems vaguely important  "},{"id":1,"href":"/notes/docs/cs61b/","title":"CS 61B","section":"Docs","content":"\u0026ldquo;Seek out knowledge\u0026rdquo; cmon see this !! check out\n"},{"id":2,"href":"/notes/ugba135/1/","title":"Week 1","section":"UGBA 135","content":"Title: : Intro to Personal Financial Management + Who Are the Millionares? + Financial Planning in a World of Credit and Debt Reading: Chapters 1, 2, and 3 Videos\nChapter 1: Introduction #   What is our definition of a millionaire? Those financially indpendent to take care of themselves If the biggest financial problem is no longer retirement, what is it? Lonegivity is the biggesst problem, living beyond what you planned for Do most people pay more in Social Security and Medicare than federal income taxes? Most people pay more in SS and Medicare taxes than federal income taxes What is the difference between being rich and being wealthy? Wealth is lifestyle What did the Nightingale/Conant study conclude about financial independence? Out of 100 people who started work at 25 and worked till 65, only 5 will be financially independent  Chapter 2: Who Are The Millionaires? #   What is the “cornerstone” of wealth? Maintaining frugality and being value-oriented (not necccesarily cheap) Do the vast majority of millionaires have college degrees? 80% do Is becoming a millionaire a choice, you can make? Yes What is a “homepreneur”? An increasing number of people who have a second business which may account for over 50% of the income, despsite being based from their home and also possibly working at a large corporation People who succeed have goals. Over the next two years, what is your goal? Work hard. Live life. Achieve goals. Dominate.  Chapter 3: Credit, Debt, and Money #   How do you establish good credit? Borrow money and pay it back on time according to terms When is the best time to establish credit? When you do not need it What is the difference between a credit card and a debit card? Debit is immediate and cash, credit is a line that you pay #expand upon later How can you avoid credit card fees and penalties? Bewing aware of what consists of a penalty or consitutes a fee What is the first thing you should do if your credit card is lost or stolen? Call the credit car issuer (bank) immediately  "},{"id":3,"href":"/notes/physics7a/2/","title":"Chapter 2: Describing Motion: Kinematics in 1D","section":"Physics 7A","content":"Mechanics: study of motion of objects, and the related concepts of forec and engergy 1. Kinematics: description of how objects move 2. Dynamics: deals with force and why objects move as they do\n translational motion is when objects move without rotation (a point particle can only undergo translational motion)  2.1: Reference Frames and Displacement #    measurements are taken from a certain viewpoint → called a reference frame in physics\n a man walking at 5 km/h on a bus going 80 km/h would be going 85 km/h, with respect to the ground one should always specify reference frame    we can change what direction positive and negative are, this is the conventional coordinate axes (with the origin at 0)\n  Recall : displacement is a vector, a quantity with both magnitude (length of a vector) and direction\n  2.2: Average Velocity #   speed is not a vector, it lacks direction  velocity is a vector   Average Speed = distance traveled / time elapsed # convert to math form later Average Velocity = displacement / time elapsed  2.3: Instantaneous Velocity #   Instantaneous Velocity = ____  has the same magnitude as instantenous speed on a position vs time graph, instantenous velocity is equal to the slope    2.4: Acceleration #   Acceleration is the change of velocity per unit of time Average Accelerationn = change in velocity / change in time  2.5: Motion at Constant Acceleration #   Instantaneous acceleration is the average of acceleration taken over an infitesimally short time interval # math shi  2.6: Solving Problems #   kinematics eqs !¡  2.7: Freely Falling Objects #   in the absence of air reistance, all objects fall with the same constant acceleration  2.8: Variable Acceleration; Integral Calculus #     "},{"id":4,"href":"/notes/cs61b/complexity/","title":"Complexity and Algoritmic Analysis","section":"CS 61B","content":" https://joshhug.gitbooks.io/hug61b/content/chap8/chap82.html\nConsiderations #   in regards to an engineer, there are some crucial things to consider -\u0026gt;  operational cost, the development costs, the maintenacne costs, and costs of failure is the program fast enough (purpose + input data factor in) the space - memory, disk space - dephends on input data as well and, scale (as input gets big)    execution cost, that is, the cost of execution in terms of time and space/memory, is referred to as time complexity and space complexity\nwe are currently focused on time complexity: while there are multiple ways to take the cost measure (in time), the main one 61b focuses on is symbolic execution times =\u0026gt; gives formula for the execution time as a function of input size and allows us to see the shape of the cost function\nAsymptotic Cost #   given that with inputs with relatively low size will not take too much memory or time, we choose to focus on the behavior of an algorithm for very large input, N. : asymptotic behavior when analyzing an algorithm;  consider the worst case only ignore mulitiplicative constants \u0026hellip; \u0026hellip;    "},{"id":5,"href":"/notes/ugba135/2/","title":"Week 2","section":"UGBA 135","content":"Title : Financial Planning in a World of Credit and Debt (continued) + Contracts + Understanding Social Security, Medicare and You Reading: Chapters 4,5, and 6 Videos\nChapter 4: Credit Reports and Credit Scores #   What is the difference between a credit report and a credit score? Credit report is an individual financial report card that describes if the subject of the report has been making credit card and loan payments on time (includes a great deal of personal information), while a credit score is a culmination of the info on your credit report Who are the 3 major credit reporting agencies? *1. Transunion (Empririca score) 2. Equifax (Beacon score) 3. Experian (Experian model) To change your credit score, what do you need to do? Change the info on your credit report (i.e. be better (less of a credit risk)) What does \u0026ldquo;faith\u0026rdquo; create that enables growth? credit What enables you to borrow more money than you earn? see above  Chapter 5: Contracts Can Be Dangerous to Your Health #   What is a contract? A binding agreement enterted volunatrily by 2+ competent parties What is consideration? A mututal obligation to perform, and that something of value is to be exchanged → either a detriment incurred by by person making the promise or a benefit reciveed by the other party How many contracts do you have now? Quite a few, employment, to real estatem debit cardsm insurance, cell phone, etc What does the \u0026lsquo;contract checklist\u0026rsquo; cover? Length of contract (how long you are required to be paid or pay and when), what cnstitutes the end of a contract (date/time, an event, is it renewable? can you terminate early, etc), Be knowledgable about how amendments can be made to the contract, as well as what occurs if either party fails to perfrom. What is a Notary Public? Public officers, constituted by law, to witness the execution of certain classes of non-contentious documents (including moirtage docs, wills, deeds, etc)  Chapter 6: Social Security and Medicare #   To recieve social security benefits, what are the 4 basic requirements? 1. Age 2. The required number of quarters you have paid into the system 3. A minimal amount of incom earned over those quarters 4. You must be a citizen or lawful alien to recieve benefits Can social security benefits be considered taxable income? 85% of SS benefits are currently taxable, however lower-income people are able to exclude more of their benefits from federal taxation What is the combined percentage rate of income paid to FICA by the employee and employer? ? Which Medicare parts are optional and means tested? Part B and D are optinal and means tested, which stipulates that \u0026hellip; ? Does Medicare cover 100% of a senior eligible\u0026rsquo;s medical expenses? ?  "},{"id":6,"href":"/notes/physics7a/3/","title":"Chapter 3: Kinematics in Two or Three Dimensions; Vectors","section":"Physics 7A","content":"3.1: Vectors and Scalars #   vectors have magnitude and direction those without magnitude (but with direction) are called scalar quantities  3.2: Addition of Vectors - Graphical Methods #    when considering displacement on a line, addition (and subtractino) is easy\n  displacement when someone walks 10 km east, then walks 5 km (i.e a quantity with both value and direction), change in position = ?\n  given the above example, one could graph this and see the following \u0026raquo;\u0026gt;\n  because the vectors are perpindicular, we can use the pythagorean theorem to get the resultant vector\n  the max of a resultant vector can only be equal to the sum of the 2 vectors (their magnitudes) (as if they were on a straight line)\n consider why all 90 degree lines that are added to make a vector can only produce perpindicularity    formal graphical definition of vector addition \u0026ldquo;the arrow drawn from the tail of the first vector to the tip of the second vector is the sum of the two vectors\u0026rdquo;\n  there are various methods to add vectors visually \u0026raquo; including tail to tip and the parallelogram method, both ends of resultant vector cannot be touching the tips of component vectors (for addition)\n  3.3: Subtraction of Vectors, and Multiplication of a Vector by a Scalar #    defintion is intutive, but the negative of a vector is simply the same magnitude but opposite in direction (recall magnitude cannot be negative)\n  to visually subtract vectors, consider the vector equation V2 - V1 # add this in later\n how would we get the difference of the two vectors\n   3.4: Adding Vector by Components #   components of a vector are usually in perpindicular directinos (such as the x and y axse) given the resulation of a velocity vector, we can use trig to solve for the components thus, we have 2 ways to specify vectors: 1. by components (Vx and Vy) 2.by magnitude V and direction theta it makes with positive x axis the following example illustrates non-perpindicular compponents \u0026raquo; is theta the angle v makes with the positive x axis  steps to adding vectors #   Draw a diagram, adding the vectors (graphically) - either by parallelogram method or tip to tail    do the rest after doing the homework\n  3.5: Unit Vectors #   a unit vector is defined to have a magnitude exactly equal to one in an x,y,z coordinate system they are called // hats all vectors are simply scaled versions of the unit vectors (i hat, j hat, k hat) (x,y,z) V = Vxi + Vyj + Vzk // add math later   3.6: Vector Kinematics #    // instantaneous def of veloicty and acceleration\n  in 1D, displacement was defined as a change in position\n  however, in the case of 2 or 3 dimensions, the displacement vector is the vector representing change in position\n  // eq.s\n  instantaneous velocity is the limit of the average velocity as change in time approaches zero\n direction of the instantaneous veloicty is along the line tangent to the path at that moment    instantaneous acceleration is defined as the limit of the average acceleration vector as the time interval change in t is allowed to approach 0 instantaneous acceleration will be non-zero when the magnitude of velocity changes or if the direction changes\n  in 2D or 3D, constant acceleratino means ax, ay, az = 0 and the average acceleration is = instantaneous acceleration at any moment\n  3.7: Projectile Motion #   path of projectile motion is parabolic currently we are only discussing when the only acceleration is downward (gravity) - we are ignoring air reistance basic info to solve problems  g = 9.80 t = 0 x0 = y0 = 0    3.8: Solving Problems Involving Projectile Motion #  // revisit once done with hw\nSteps #   Read carefully (choose the object to analyze) Draw a careful diagram showing what is happening to the object Choose an origin and an xy coordinate system Decide on the time interval, for which the object can only be under the motion of gravity x and y motions are conneceted by the common time Examine x and y components seperately → if given intial velocity, resolve into x and y components List known and unknown quantities, using ax = 0, ay = -g / +g, and + / - dephending on whether you choose y positive down or up helpful tips #   Vx never changes Vy = 0 at highest point of any trajectory that returns downward velocity just before landing is generally not zero   Think/plan before eq.s → apply relevant eqs and combine eqs if neccesary  3.9: Relative Velocity #   If 2 particles are on the same line, determing their velocities, relative to each other, is a matter of simple addition / subtraction When they are not along the same line, vector addition is used. Label carefully to maintain distinct and unambigious reference frames subscripts  "},{"id":7,"href":"/notes/cs61b/packages/","title":"Packages and Access","section":"CS 61B","content":"  Non netsted classes or interfacnes may be public or package private\n  Classes without a modifier are package private (only accesible within the same package)\n  Members of a class (attriubes/fields/instance variables, methods, constructors, nested types) can be any of the four access levels\n  Access is based on static not dynamic types -\u0026gt; class not object\n  Only override a method with one that is at least as permissive\n  protected {\u0026hellip;}\n  public declarations are for \u0026lsquo;clients\u0026rsquo;,\n  package private is for use in implementation in a class that must be known to other classes that assist in the implemetation (use it but don\u0026rsquo;t reveal it)\n  protected declarations are part of implementation that subtypes may need but clients don\u0026rsquo;t generally use -\u0026gt; can use constructor in a subtype but cannot invoke constuctor outside\n  private (need to know basis), only that class needs\n  "},{"id":8,"href":"/notes/ugba135/3/","title":"Week 3","section":"UGBA 135","content":"Title : Government Revenues and Expenses Reading: Chapter 7 Videos\n  individual income taxes : 46%\n  social security / medicare taxes : 34%\n  corporate income taxes : 11%\n  excise and other taxes/fees : 8%\n  estate taxes : 1%\n  all required forms are offered for free at irs.gov\n  federal income tax is a pay as you go system; 1. employer witholds a tax based on filing status and payroll amount.\n  there may be an additional quarterly estimated based on un-taxed income (commisions, dividends, capital gains, etc)\n  penalties galore\u0026hellip; do research\n  W-4 formi is what you fill out when you start a job: lets an employer ikow how much do deduct/withold from each paycheck for personal income taxes (federal and state)\n  employers can take more \u0026ndash;\u0026gt; easies to not spend and increares cushion if taxes are off (+ worst case tax refund)\n  April 15th!\n  Tax Basics #   remember that changes literally and in intreptation can happen at any time  Filing Status #  - single, married filing jointly, married filing seperately, head of household, and widower with dependent child  Earned Income #  - wages, salary, bonuses, royalties, etc - evidenced by W-2 form - self-employed instructions differ  Total Income #  - earned + unearned (taxable interest, dividends, capital gains, etc) - qualifed stock dividends are currently taxed at a max rate of 20% (s: $425k m: $479k) if stock is of a certain amount and held for 61 days+ , max of 15% below those amts , 0% for less than $38k for s and 72k for m - non-qualified dividends are those from stocks held less than 61 days and \u0026quot;ordinary divideds\u0026quot; , reported on Form 1040 and are taxed as ordinary income at indiv. tax rate - taxes on interest recevied is reported on appropriate schedule and taxed as ordinary income  Adjusted Gross Income #  - total income minus specific deductions (see modified adjusted gross income)  Capital Gains Tax #  - capital gains tax is reported on the 1040 form schedule - 2 types: 1. short term capital gains: assets owned less than 1 year (profit added to income and taxed at indiv tax rate) 2. long term capital gains: for an assest owned more than 1 year, almost identical as qualified stock dividends - capital losses can usually be used to offsest capital gains for tax purposes (first short term, then long term), excess loss can be applied to either type  Wash Sale Rule #  - cannot declare a loss on a security if you purchase the identical security within 30 days before or after, it remains a loss but is not tax deductible  Tax Deductions #  - standard dedution are a no questions asked deduction to income before calculating your tax (no proof or records needed) : single ($12,000) married and filing jointly ($24,000) - itemized deductions: if you believe that your eligible deductions are more than the standard deductions, itemize them on 1040 - eligible deductions: medical expenses, state and local taxes, mortages, charity, etc ...  Quarterly Estimated Taxes #  - if you cannot pay your taxes; always file a return, consider borowwing or using a credit card, see IRS First Time Abate  #  #  "},{"id":9,"href":"/notes/physics7a/4/","title":"Chapter 4: Dynamics: Newton's Laws of Motion","section":"Physics 7A","content":"4.1: Force #   Force, as it is largely known, is a push or pull on an object Force is needed to accelerate an object Force is a vector  4.2: Newton\u0026rsquo;s First Law of Motion #   Galileo imagined an idealealized world → one without friction With this in mind, Galileo realized that without force on a moving object, it will continue to move with constant speed in a straight line This idea leads into Newton\u0026rsquo;s 1st Law  Every object continues in its state of rest, or of uniform velocity in a staight line, as long as no net force acts on it. the tendency of an object to maintain its state of rest or of uniform velocity in a straight line is called inertia   inertial reference frames are frames in which Newton\u0026rsquo;s 1st law holds (constant velocity / non-accelerating frames)  4.3: Mass #   in physics, mass is the measure of inertia → the more mass an object has, the greater force required to give it an acceleration mass is not weight  mass is a property (its quantity of matter) weight is a force, the pull of gravity acting on an object    4.4: Newton\u0026rsquo;s Second Law of Motion #   Net force causes acceleration  consider how one would push a cart and how that would affect acceleration and time   the acceleration of an object is directly proportional to the net force acting on it, and is inversely proportional to the object\u0026rsquo;s mass. The direction of the acceleration is in the direction of net force acting on the object    math equations from txtbook\n   intuitive, but, the component of acceleration in each direction is affected only the component ot the net force in that direction ++ // eqs given defintion of mass as inertia, acceleration or mass of 2 objects with equal force can be found via m1/m2 = a1/a2  4.5: Newton\u0026rsquo;s Third Law of Motion #  formal definition: whenever one object exerts a force on a second object, the second exerts an equal force in the opposite direction on the first\n"},{"id":10,"href":"/notes/cs61b/collections/","title":"Collections, Amortization","section":"CS 61B","content":"not needed?\n"},{"id":11,"href":"/notes/cs61b/integer/","title":"Integers","section":"CS 61B","content":"Integers Types and Literals #  the range of values for signed types -2^N .. 2^N - 1 (there is 1 less value for posivite values to account for 0) the range of values for unsigned types 0 .. 2^N - 1\n(N is the number of bits)\n  how do we handle \u0026lsquo;overflow\u0026rsquo;, numbers that are so large they are outside the range, java employs modular arithmetic (\u0026lsquo;wrapping around\u0026rsquo;)\n  if some result of an arithmetic subexpression is supposed to be of type T; then we compute the mathematical value, x, which yields some number x\u0026rsquo;, that is in the range of T. x\u0026rsquo; = x modulo 2^N\n x - x\u0026rsquo; is a multiple of 2^N     "},{"id":12,"href":"/notes/cs61b/project2/","title":"Project 2: Ataax","section":"CS 61B","content":"Ataax is a 2 person game with red and blue pieces played on a 7x7 board\nHow the Game is Played #   Intially, there are pieces in all four corners and the red player goes first  red in top left / bottom right (a7/g1) blue in top right / bottom left (a1/g7)   Play continues until there are no moves left or there has been 25 consecutive jumps between both players winner is player with the most pieces at the end of the game  if you have no pieces, you lose   to tie;  players must have same # of pieces neither player can make a move OR the max number of jumps (25 consecutive between players) has been reached   two kinds of moves  Extending: place a new piece of your color next to an existing piece (horizontally, vertically, diagonally adjacent) Jumping: move a piece of your color to a square that is no more than 2 rows and 2 columns away   all opposing pieces that are touching (previously empty) square are replaced by your color a player can only pass if you cannot move   at the beginning of the game, you can set blocks, pre-filled squares that may never be moved or or moved to  they are symmetrical about the center reflected along x and y axis config \u0026lsquo;file\u0026rsquo; may list a square on the right side of the board but another block must be placed symmetrically on the left side as well    Commands #   there are commands that player inputs into the textual interface (GUI for EC) do EC Starting and Ending Games #   new : Abandons the current game (if one is in progress), clears the board to its initial configuration, and starts a new game. quit : Abandons any current game and exits the program. The end of input has the same effect.  Commands to Set Parameters #   auto  : manual  : block CR : seed N :  Entering and Undoing Moves #  program must reject illegal moves from any player (they have no effect on the board; the program should tell the user that there is an error and request another move). An AI must not make illegal moves.  c0r0-c1r1 : undo :  Miscellaneous Commands #   help : Print a brief summary of the commands. dump : prints board in exactly the following format  \u0026ldquo;-\u0026rdquo; indicates an empty square \u0026ldquo;r\u0026rdquo; is a red square \u0026ldquo;b\u0026rdquo; is a blue square \u0026ldquo;X\u0026rdquo; indicades a block \u0026ldquo;===\u0026rdquo;    Helpful Commands (to Add) #   board : Prints out a board in something nicer than the dump format. The staff\u0026rsquo;s version, for example, prints row and column designations along the sides of the board. verbose : Causes the board to get printed (as for board) after each move. quiet : Turns off verbose mode, so that the board no longer gets printed after each move.    Output #  \u0026hellip;\nTesting #   make unit runs unit tests, same with make acceptance to run individual acceptance tests \u0026hellip;  Hints / Notes #   _notifier instance variable and the announce() method that you see used throughout Board.java is a mechanism for the GUI (see the Extra Credit section). If you aren\u0026rsquo;t working on the GUI, you can ignore this mechanism entirely. EXTENDED_SIDE is explained by _board instance var in Board.java The unrecordedSet() method in Board.java \u0026hellip;, set() method sets a square and makes the move as undoable ? use Move.move() to get Move object rather than calling Move constructor \u0026ldquo;Linearized indices\u0026rdquo; is just a fancy way of stating that we converted the standard 2D array indexing with a row and column index into 1D array indexing. see char arithmetic (int representation etc) for distance between squares; https://replit.com  Tasks #   Implement the logic of Ataax:  What kind of move it is, if move is allowed, making a move and updating board, setting blocks, etc   Implement an \u0026lsquo;AI\u0026rsquo; player that you can play the game against  the AI needs to be able to force a win if possible within 4 moves of a given position cannot use more than 10 seconds to make any given move techniques will be covered in lecture    Skeleton Notes #  Move #  - for efficency, all moves are generated at the beginning and static move gets them - Constuctor: takes in col0,row0 and col1,row1, which are offset from ...? - _isExtend = row1-row0 \u0026lt;= 1 || col1-col0 == 1 - _isJump = (row1-row0 \u0026lt;= 2 \u0026amp;\u0026amp; col1-col0 \u0026lt;= 2) \u0026amp;\u0026amp; (row1-row0 \u0026gt; 0 \u0026amp;\u0026amp; col1-col0 \u0026gt; 0) #non-adjacent  Board #  instance variables: - _notifier : see hints / notes - PieceColor[] _board : 11x11 board (outer rows and cols are blocks) - PieceColor _whoseMove : next player to move - int _numJumps : num consecutive jumps since last clear or beginning of the game - _totalOpen : total num unblocked squares - int _totalOpen : num unblocked squares - int[] _numPieces : num of blue and red pieces - PieceColor _winner : set winner when game ends (empty if tie) - ArrayList\u0026lt;Move\u0026gt; _allMoves : list of all (non-undone) moves since last clear or beginning of the game - Stack\u0026lt;Integer\u0026gt; _undoSquares : stack of linearized indices of squares that have been modified and not undone. Nulls mark the beginnings of full moves. - Stack\u0026lt;PieceColor\u0026gt; _undoPieces : stack of pieces formally at corresponding squares in _UNDOSQUARES methods : - Board() - new, cleared board in intial config: - make block grid outside 7x7 - set 4 intial pieces + all others (in 7x7) as empty (do in clear) - set instance variables to *correct* intial setting : winner = null, numJumps, numMoves() = 0, - how indexes of the board work : -\u0026gt; - Board(Board board0) - see if additional copying is neccesary - legalMove (Move move) - use Move.___ and index method : ___ summarize after checkpoint - makeMove(Move move) : - determine if extend (+ piece) or jump (move piece) - after moving, if touching other opposite() squares (?) - change numMoves, numJumps, numPieces (red, blue), - set numJumps to 0 if pass? - legalBlock(char c, char r) : true if legal to place block at C R - \u0026lt; a \u0026amp;\u0026amp; \u0026gt; g - reflection  "},{"id":13,"href":"/notes/cs61b/sequences/","title":"Sequences (+ Assorted Design Topics)","section":"CS 61B","content":"Topics include; views, maps, sentienls, stacks, adapters, and more.\nViews #   views (concept) are an alternative presentation of (interface to) an existing object : view implements inteface of object a not concrete analogy for a view is a pointer into object  Map Views? #  Partial Implementations #   the idea of taking advantage of the fact that operations are releated for designers, this can be used by implementing existing concrete types or interfaces. it is useful because if \u0026lsquo;fills\u0026rsquo; in a lot  Stacks #   stacks are last in first out, i.e if you push 1,2,3 \u0026ndash;\u0026gt; you pop them in 3,2,1 rule of Demeter  "},{"id":14,"href":"/notes/docs/ugba135/","title":"UGBA 135","section":"Docs","content":"Weeks #  Textbook: the Missing Link #  Syllabus (for required videos and reading and weekly topics) #  "},{"id":15,"href":"/notes/cs61b/sorting/","title":"Sorting","section":"CS 61B","content":"why sorting? supports searching (binary, equal items, same val for property, what are my nearest neighbor, etc) \u0026ndash; see convex hull (cs 170)\nformal definition: a soring algorithm (or sort) permutes (re-arranges) a sequece of elements to bring them into order, according to some total order. - a total order is : Total: All items can be compared with one another Reflexive: An item can be compared to itself Antisymmetric: x \u0026lt;= y AND y \u0026lt;= x IFF y == x Transitive: If x \u0026lt;= y and y \u0026lt;= z, then x must be \u0026lt;= z - a sort that does not change the relative order of equivalent entries (compared to input) is called stable (consider sorting dictionary defs for same word, ignoring defition - unstable)\nClassifications #    Internal sorts keeps all data in primary memory\n  External sorts process large amounts of data in batches, keeping what won\u0026rsquo;t fit in secondary storage (in the old days, tapes)\n  Comparison-based sorting assumes only thing we know about keys is their order.\n  Radix sorting uses more info about key structure\n  Insertion sorting works by repeatedly inserting items at appropriate position in the sorted sequence being constructed\n  Selection sorting works by repeatedly selecting the next larger / smaller item in order and adding it to one of the sorted sequence being constructed\n  inversion are a measure of how sorted a list is ; 0 inversion = perfectly sorted , N*(N-1)/2 inversions = reversed\n  Sorting by Insertion #   start with empty sequence of data, add each item from input, inserting it into the output sequecne at the right point good for small data sets, with vector or linked list, time for finding + inserting one item is at worst $\\Theta(k)$, where k is the number of outputs so far =\u0026gt; gives us $\\Theta(N^{2})$  "},{"id":16,"href":"/notes/docs/physics7a/","title":"Physics 7A","section":"Docs","content":"\u0026ldquo;On the way to become a Quantum God\u0026hellip;\u0026rdquo;\nChapters #  → read chapter 3 + written notes .\n"}]