<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CS 61B on berkeley.notes</title><link>https://rohan-mantena.github.io/notes/docs/spring-2022/cs61b/</link><description>Recent content in CS 61B on berkeley.notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://rohan-mantena.github.io/notes/docs/spring-2022/cs61b/index.xml" rel="self" type="application/rss+xml"/><item><title>Complexity and Algoritmic Analysis</title><link>https://rohan-mantena.github.io/notes/cs61b/complexity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rohan-mantena.github.io/notes/cs61b/complexity/</guid><description>https://joshhug.gitbooks.io/hug61b/content/chap8/chap82.html
Considerations # in regards to an engineer, there are some crucial things to consider -&amp;gt; operational cost, the development costs, the maintenacne costs, and costs of failure is the program fast enough (purpose + input data factor in) the space - memory, disk space - dephends on input data as well and, scale (as input gets big) execution cost, that is, the cost of execution in terms of time and space/memory, is referred to as time complexity and space complexity</description></item></channel></rss>